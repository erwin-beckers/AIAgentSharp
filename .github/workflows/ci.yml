name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test --no-build --verbosity normal --configuration Release --logger trx --results-directory ./test-results
      
  coverage:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Run tests with coverage
      run: |
        dotnet test --no-build --verbosity normal --configuration Release --collect:"XPlat Code Coverage" --results-directory ./coverage
      env:
        COVERLET_OUTPUT_FORMAT: cobertura
        
    - name: Find coverage file
      run: |
        find ./coverage -name "*.xml" -type f
        ls -la ./coverage/
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/**/coverage.cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
        path_to_write_report: ./coverage/codecov_report.txt
        coverage_command: custom
        custom_flags: --source src/ --exclude tests/ --exclude examples/ --exclude **/*.Tests.cs --exclude **/*.Tests.csproj --exclude **/TestResults/ --exclude **/obj/ --exclude **/bin/ --exclude **/coverage/ --exclude **/nupkg/
